{"version":3,"sources":["utils/BodyContext.js","utils/useBodyModel.js","components/buttons/SocialButton/index.js","utils/API.js","pages/Login.js","components/MuscleChoice/MuscleChoice.js","components/buttons/SubmitButton/SubmitButton.js","components/Home/Home.js","components/Profile/Profile.js","components/Navbar/Navbar.js","components/buttons/NewWorkoutButton/NewWorkoutButton.js","components/buttons/SaveButton/SaveButton.js","components/WorkoutCard/WorkoutCard.js","pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["BodyContext","React","createContext","useBodyModel","useState","authState","setAuth","userState","setUser","options","name","selected","targets","setTargets","workout","setWorkout","SocialButton","className","onClick","this","props","triggerLogin","children","Component","SocialLogin","axios","get","email","post","body","id","Login","history","bodyContext","useContext","lastLocation","useLastLocation","useEffect","userCookie","Cookies","API","then","resp","data","handleSocialLogin","console","log","catch","err","to","src","alt","style","maxWidth","provider","appId","onLoginSuccess","onLoginFailure","marginRight","fontSize","MuscleChoice","target","value","event","buttonTarget","attributes","getNamedItem","i","SubmitButton","selectedState","updateSelected","useHistory","a","handleSubmit","e","targetArr","push","toLowerCase","results","length","j","Math","floor","random","temp","oneTarget","countOne","countTwo","n","workoutArr","twoTargets","countThree","threeTargets","countFour","fourTargets","Button","type","disabled","OverlayTrigger","placement","overlay","Tooltip","pointerEvents","Home","map","t","key","Profile","userId","_id","r","Navbarhome","userName","firstName","profileImage","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","remove","NewWorkoutButton","SaveButton","workoutBody","WorkoutCard","Card","text","backgroundColor","Body","Title","w","exerciseName","Subtitle","Text","borderBottom","paddingBottom","exerciseInfo","alternatives","join","Main","exact","path","component","App","Provider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f6837e32.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst BodyContext = React.createContext();\r\n\r\nexport default BodyContext;\r\n","import { useState } from \"react\";\r\n\r\nconst useBodyModel = () => {\r\n  const [authState, setAuth] = useState(false);\r\n\r\n  const [userState, setUser] = useState({});\r\n\r\n  const [targets, setTargets] = useState({\r\n    options: [\r\n      {\r\n        name: \"Push\",\r\n        selected: false,\r\n      },\r\n      {\r\n        name: \"Pull\",\r\n        selected: false,\r\n      },\r\n      {\r\n        name: \"Legs\",\r\n        selected: false,\r\n      },\r\n      {\r\n        name: \"Core\",\r\n        selected: false,\r\n      },\r\n    ]\r\n  });\r\n\r\n  const [workout, setWorkout] = useState([])\r\n\r\n\r\n  return { authState, setAuth, userState, setUser, targets, setTargets, workout, setWorkout };\r\n};\r\n\r\nexport default useBodyModel;\r\n","import React, { Component } from \"react\";\r\nimport SocialLogin from \"react-social-login\";\r\n// import style from \"./style.css\";\r\n\r\nclass SocialButton extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"text-center social-btn\">\r\n        <button className=\"btn\" onClick={this.props.triggerLogin}>\r\n          {this.props.children}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SocialLogin(SocialButton);\r\n","import axios from 'axios'\r\n\r\nexport default {\r\n\r\n   \r\n    loginUser: () => \r\n        axios.get('/api/auth/google')\r\n    ,\r\n\r\n    getUser: email => \r\n        axios.post('/api/users/login', {email})\r\n    ,\r\n\r\n    // using post to retrieve all exercises from specified targets(array)\r\n    getExerciseByTarget: body => \r\n        axios.post('/api/exercises/', body)\r\n    ,\r\n\r\n    \r\n    // create workouts based off selected exercises\r\n    createWorkout: (id, body) => \r\n        axios.post(\"/api/workouts/\" + id, body)\r\n    ,\r\n\r\n    // remove selected workout\r\n    removeWorkout: body => \r\n        axios.post(\"/api/workouts/\", body)\r\n    ,\r\n    \r\n    getUserWorkouts: id => \r\n        axios.get(\"/api/users/\" + id)\r\n\r\n}","import React, { useContext, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useLastLocation } from \"react-router-last-location\";\r\nimport Cookies from \"js-cookie\";\r\nimport SocialButton from \"../components/buttons/SocialButton\";\r\nimport BodyContext from \"../utils/BodyContext\";\r\nimport API from \"../utils/API\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = ({ history }) => {\r\n  const bodyContext = useContext(BodyContext);\r\n  const lastLocation = useLastLocation();\r\n\r\n  useEffect(() => {\r\n    const userCookie = Cookies.get(\"user\");\r\n\r\n    if (userCookie) {\r\n      bodyContext.setAuth(true);\r\n      API.getUser(userCookie).then((resp) => {\r\n        bodyContext.setUser(resp.data);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleSocialLogin = (data) => {\r\n\r\n    API.loginUser()\r\n      .then((resp) => {\r\n        console.log(resp)\r\n        // bodyContext.setUser(resp.data);\r\n        // bodyContext.setAuth(true);\r\n        // Cookies.set(\"user\", resp.data.email, { expires: 7 });\r\n        // history.push(\"/home\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"login failed\");\r\n      });\r\n  };\r\n\r\n  const handleSocialLoginFailure = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  if (bodyContext.authState) {\r\n    return <Redirect to={lastLocation ? lastLocation : \"/home\"} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container d-flex flex-column justify-content-center\">\r\n      <div className=\"row col-10 offset-1 d-flex flex-row justify-content-center mr-2\">\r\n        \r\n        \r\n        <img\r\n          src=\"/muscle2-light.png\"\r\n          className=\"bicepRightLogin\"\r\n          alt=\"logo\"\r\n        />\r\n        <img\r\n          src=\"/house-light.png\"\r\n          className=\"logoHouseLogin\"\r\n          alt=\"logo\"\r\n        />\r\n        <img\r\n          src=\"/muscle1-light.png\"\r\n          className=\"bicepLeftLogin\"\r\n          alt=\"logo\"\r\n        />\r\n       \r\n        <h1 className=\"text-center textColor m-4\">HomeBody</h1>\r\n      </div>\r\n      <div className=\"loginForm card bg-light\" style={{ maxWidth: \"18rem\" }}>\r\n        <h3 className=\"text-center card-header\">Sign In</h3>\r\n        <div className=\"card-body my-3\">\r\n          {/* {<SocialButton\r\n            provider=\"google\"\r\n            appId=\"655422208019-cq9d7c5d7rrjpuh0ucqjfd6cu3rp7e74.apps.googleusercontent.com\"\r\n            onLoginSuccess={handleSocialLogin}\r\n            onLoginFailure={handleSocialLoginFailure}\r\n          >\r\n            <div className=\"googleLogin\">\r\n              <img\r\n                src=\"btn_google_light_normal_ios.svg\"\r\n                style={{ height: \"30px\", marginRight: \"24px\" }}\r\n                alt=\"Google Button\"\r\n              />\r\n              Sign in with Google\r\n            </div>\r\n          </SocialButton>} */}\r\n          <button onClick={handleSocialLogin}>google</button>\r\n          <SocialButton\r\n            provider=\"facebook\"\r\n            appId=\"321586675951521\"\r\n            onLoginSuccess={handleSocialLogin}\r\n            onLoginFailure={handleSocialLoginFailure}\r\n          >\r\n            <div className=\"facebookLogin\">\r\n              <i\r\n                className=\"fab fa-facebook\"\r\n                style={{ marginRight: \"20px\", fontSize: \"19px\" }}\r\n              />\r\n              Sign in with Facebook\r\n            </div>\r\n          </SocialButton>\r\n          {/* <SocialButton\r\n          provider='github'\r\n          gatekeeper='https://gatekeeperreact.herokuapp.com'\r\n          appId='399ced5028cbcdf3a73e'\r\n          redirect='http://localhost:3000'\r\n          onLoginSuccess={handleSocialLogin}\r\n          onLoginFailure={handleSocialLoginFailure}\r\n          >\r\n        <i className=\"fa fa-github\"></i> Sign in with <b>Github</b>\r\n        </SocialButton> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useContext } from \"react\";\r\nimport BodyContext from \"../../utils/BodyContext\";\r\nimport './style.css'\r\nconst MuscleChoice = ({ target, value, selected }) => {\r\n  const { targets, setTargets } = useContext(BodyContext);\r\n  const handleButtonClick = event => {\r\n    const buttonTarget = event.target.attributes.getNamedItem(\"value\").value\r\n    for (let i = 0; i < 4; i++) {\r\n      if (targets.options[i].name === buttonTarget) {\r\n        if (targets.options[i].selected) {\r\n          setTargets({...targets}, targets.options[i].selected = false)\r\n        } else {\r\n          setTargets({...targets}, targets.options[i].selected = true)\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className='cardButtons '>\r\n        <div\r\n          value={value}\r\n          onClick={\r\n            handleButtonClick\r\n          }\r\n          className={(selected ? 'clicked' : 'notClicked')}>\r\n          {target}\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MuscleChoice;","import React, { useContext, useState, useEffect } from \"react\";\r\nimport BodyContext from \"../../../utils/BodyContext\";\r\nimport API from '../../../utils/API'\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction SubmitButton() {\r\n\r\n    const { targets, setWorkout } = useContext(BodyContext);\r\n    const [selectedState, updateSelected] = useState(false)\r\n    const history = useHistory();\r\n\r\n\r\n    // toggle submit button deactivation based on targets hook\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (targets.options[0].selected || targets.options[1].selected || targets.options[2].selected || targets.options[3].selected) {\r\n                updateSelected(true)\r\n            } else {\r\n                updateSelected(false)\r\n            }\r\n        })()\r\n\r\n    }, [targets])\r\n\r\n    // function for a single target query\r\n    const oneTarget = data => {\r\n        setWorkout( data )\r\n    }\r\n\r\n    // function for a two target query\r\n    const twoTargets = (data, targetArr) => {\r\n        let countOne = 0\r\n        let countTwo = 0\r\n        let n = data.length\r\n        let workoutArr = []\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            if (data[i].target === targetArr[0] && countOne < 3) {\r\n                workoutArr.push(data[i])\r\n                countOne++\r\n            } else if (data[i].target === targetArr[1] && countTwo < 3) {\r\n                workoutArr.push(data[i])\r\n                countTwo++\r\n            }\r\n        }\r\n        setWorkout(workoutArr)\r\n    }\r\n\r\n    // function for three target query\r\n    const threeTargets = (data, targetArr) => {\r\n        let countOne = 0\r\n        let countTwo = 0\r\n        let countThree = 0\r\n        let n = data.length\r\n        let workoutArr = []\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            if (data[i].target === targetArr[0] && countOne < 2) {\r\n                workoutArr.push(data[i])\r\n                countOne++\r\n            } else if (data[i].target === targetArr[1] && countTwo < 2) {\r\n                workoutArr.push(data[i])\r\n                countTwo++\r\n            } else if (data[i].target === targetArr[2] && countThree < 2) {\r\n                workoutArr.push(data[i])\r\n                countThree++\r\n            }\r\n        }\r\n        setWorkout(workoutArr)\r\n    }\r\n\r\n    // function for four target query\r\n    const fourTargets = (data, targetArr) => {\r\n        let countOne = 0\r\n        let countTwo = 0\r\n        let countThree = 0\r\n        let countFour = 0\r\n        let n = data.length\r\n        let workoutArr = []\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            if (data[i].target === targetArr[0] && countOne < 2) {\r\n                workoutArr.push(data[i])\r\n                countOne++\r\n            } else if (data[i].target === targetArr[1] && countTwo < 2) {\r\n                workoutArr.push(data[i])\r\n                countTwo++\r\n            } else if (data[i].target === targetArr[2] && countThree < 2) {\r\n                workoutArr.push(data[i])\r\n                countThree++\r\n            } else if (data[i].target === targetArr[3] && countFour < 2) {\r\n                workoutArr.push(data[i])\r\n                countFour++\r\n            }\r\n        }\r\n        setWorkout(workoutArr)\r\n    }\r\n\r\n    // on submit button click\r\n    const handleSubmit = e => {\r\n        let targetArr = []\r\n        for (let i = 0; i < 4; i++) {\r\n            if (targets.options[i].selected) {\r\n                targetArr.push(targets.options[i].name.toLowerCase())\r\n            }\r\n        }\r\n        API.getExerciseByTarget(targetArr)\r\n        .then(results => {\r\n            let data = results.data\r\n            for (let i = data.length - 1; i > 0; i--) {\r\n                const j = Math.floor(Math.random() * i)\r\n                const temp = data[i]\r\n                data[i] = data[j]\r\n                data[j] = temp\r\n            }\r\n            switch (targetArr.length) {\r\n                case 1:\r\n                    oneTarget(data)\r\n                    history.push('/workout')\r\n                    break;\r\n                case 2:\r\n                    twoTargets(data, targetArr)\r\n                    history.push('/workout')\r\n                    break;\r\n                case 3:\r\n                    threeTargets(data, targetArr)\r\n                    history.push('/workout')\r\n                    break;\r\n                case 4:\r\n                    fourTargets(data, targetArr)\r\n                    history.push('/workout')\r\n                    break;\r\n                default:\r\n                    console.log('Something went wrong.')\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n\r\n        !selectedState ? (\r\n        <OverlayTrigger\r\n            placement=\"bottom\"\r\n            overlay={<Tooltip className=\"tooltip-light\" id=\"tooltip-disabled\">Select One or More Category From Above</Tooltip>}\r\n        > \r\n            <span className=\"d-inline-block\">\r\n                <Button className=\"btn btn-danger btn-lg\" type=\"button\" disabled={!selectedState} style={{ pointerEvents: 'none' }} onClick={handleSubmit}>\r\n                    Create My Workout\r\n                </Button>\r\n            </span>\r\n            {/* <button type=\"button\" className=\"btn btn-danger btn-lg\" disabled={!selectedState} onClick={handleSubmit}>Create My Workout</button> */}\r\n        </OverlayTrigger>\r\n        ) : \r\n        (\r\n            <span className=\"d-inline-block\">\r\n                <Button className=\"btn btn-danger btn-lg\" type=\"button\" disabled={!selectedState} onClick={handleSubmit}>\r\n                    Create My Workout\r\n                </Button>\r\n            </span>\r\n        )\r\n    )\r\n}\r\n\r\nexport default SubmitButton","import React, { useContext } from \"react\";\r\nimport BodyContext from \"../../utils/BodyContext\";\r\nimport MuscleChoice from \"../MuscleChoice/MuscleChoice\";\r\nimport SubmitButton from \"../buttons/SubmitButton/SubmitButton\";\r\n\r\nconst Home = () => {\r\n  const bodyContext = useContext(BodyContext);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        {bodyContext.targets.options.map((t) => (\r\n          <div key={t.name} className=\"col-6 col-md-3 mt-4\">\r\n            <MuscleChoice\r\n              target={t.name}\r\n              value={t.name}\r\n              selected={t.selected}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-8 offset-2 text-center\">\r\n          <SubmitButton />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useContext, useEffect} from \"react\";\r\nimport BodyContext from \"../../utils/BodyContext\";\r\nimport API from \"../../utils/API\"\r\n\r\nconst Profile = () => {\r\n  const {userState} = useContext(BodyContext)\r\n\r\n  const userId = userState._id\r\n  const [userWorkouts, setUserWorkouts] = useState()\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(userId)\r\n    API.getUserWorkouts(userId)\r\n    .then(r => {\r\n      console.log(r)\r\n    })\r\n}, [])\r\n\r\n  return (\r\n    <>\r\n      <h1>Saved Workouts:</h1>\r\n      \r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useContext } from \"react\";\r\nimport BodyContext from \"../../utils/BodyContext\";\r\nimport Cookies from \"js-cookie\";\r\nimport \"./style.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\n\r\nconst Navbarhome = () => {\r\n  const { userState, setAuth } = useContext(BodyContext);\r\n  const userName = userState.firstName ? userState.firstName : \"Name\";\r\n  const profileImage = userState.profileImage ? userState.profileImage : \"https://via.placeholder.com/96x96\";\r\n  const history = useHistory();\r\n\r\n  const logout = () => {\r\n    Cookies.remove(\"user\");\r\n    setAuth(false);\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <Navbar className= \"navbar navbar-custom navbar-dark\" expand=\"lg\">\r\n      <Navbar.Brand href=\"/\">\r\n      <div>\r\n        <img src=\"/house-light.png\" className=\"logoHouse\" alt=\"\"></img>\r\n        <img src=\"/muscle1-light.png\" className=\"bicepLeft\" alt=\"\"></img>\r\n        <img src=\"/muscle2-light.png\" className=\"bicepRight\" alt=\"\"></img>\r\n      </div>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <div className=\"navbar-nav\">\r\n            <Link className=\"navbar-brand mt-1 mr-2\" to=\"/profile\">\r\n              <img className=\"profilePic\" src={profileImage} alt=\"\"></img>\r\n            </Link>\r\n            <Link className=\"nav-item nav-link pt-4 pr-2 nameColor\" to=\"/profile\">\r\n              {userName}\r\n            </Link>\r\n            <Link className=\"nav-item nav-link pt-4 nameColor\" to=\"/home\">\r\n              Home <span className=\"sr-only\">(current)</span>\r\n            </Link>\r\n            <Link className=\"nav-item nav-link pt-4\" to=\"/profile\">\r\n              Saved Workouts\r\n            </Link>\r\n            <a type=\"button\" href=\"/\" className=\"nav-item nav-link pt-4\" onClick={logout}>\r\n              Logout\r\n            </a>\r\n          </div>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navbarhome;","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst NewWorkoutButton = () => {\r\n    return (\r\n        <Link className=\"btn btn-danger btn-md mr-2\" to=\"/\">\r\n            <img\r\n                className=\"mb-1 pr-1\"\r\n                src=\"/arrow-204.png\" \r\n                alt=\"New Workout\"\r\n                />\r\n            New Workout\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default NewWorkoutButton","import React, { useContext } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport BodyContext from '../../../utils/BodyContext';\r\nimport API from '../../../utils/API';\r\n\r\nconst SaveButton = () => {\r\n\r\n    const { workout, userState } = useContext(BodyContext)\r\n\r\n    const handleSave = e => {\r\n        const userId = userState._id\r\n        const n = workout.length\r\n        const workoutBody = []\r\n        for (let i=0; i < n; i++){\r\n            workoutBody.push(workout[i]._id)\r\n        }\r\n        API.createWorkout(userId, workoutBody)\r\n        .then(results => console.log(results))\r\n        \r\n    }\r\n\r\n    return (\r\n        <Link className=\"btn btn-secondary btn-md ml-2\" onClick={handleSave} to=\"/profile\">\r\n            Save Workout\r\n            <img\r\n                className=\"mb-1 pl-1\"\r\n                src=\"/arrow-203.png\" \r\n                alt=\"Save Workout\"\r\n                />\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default SaveButton","import React, { useContext } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport BodyContext from \"../../utils/BodyContext\";\r\nimport NewWorkoutButton from \"../buttons/NewWorkoutButton/NewWorkoutButton\";\r\nimport SaveButton from \"../buttons/SaveButton/SaveButton\";\r\n\r\nfunction WorkoutCard() {\r\n  const { workout } = useContext(BodyContext);\r\n\r\n  // ----------\r\n  // When refreshed, workout disappears from the workout \"Page\"\r\n  // ----------\r\n  return (\r\n    <>\r\n      <Card\r\n        className=\"mt-5 col-12 col-sm-10 offset-sm-1 col-md-8 offset-md-2 col-lg-6 offset-lg-3 text-center\"\r\n        text=\"light\"\r\n        style={{ backgroundColor: \"#1a1a1a\" }}\r\n      >\r\n        <Card.Body>\r\n          <Card.Title className=\"text-center lead font-weight-bold\">\r\n            Your Workout\r\n          </Card.Title>\r\n          {workout.map((w) => {\r\n            return (\r\n              <div key={w.exerciseName}>\r\n                <Card.Subtitle className=\"text-light mt-3 lead font-weight-bold\">\r\n                  Exercise:\r\n                </Card.Subtitle>\r\n\r\n                <Card.Text className=\"text-muted\">{w.exerciseName}</Card.Text>\r\n\r\n                <div\r\n                  className=\"text-muted text-center\"\r\n                  style={{\r\n                    borderBottom: \"1px solid #333232\",\r\n                    paddingBottom: \"20px\",\r\n                  }}\r\n                >\r\n                  <Card.Subtitle className=\"text-light lead font-weight-bold\">\r\n                    Description:\r\n                  </Card.Subtitle>\r\n\r\n                  <Card.Text>{w.exerciseInfo}</Card.Text>\r\n\r\n                  <Card.Subtitle className=\"text-light lead font-weight-bold\">\r\n                    Alternative Exercises:\r\n                  </Card.Subtitle>\r\n                  <Card.Text>{w.alternatives.join(\", \")}</Card.Text>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          <div className=\"container mt-4\">\r\n            <div className=\"d-flex justify-content-center\">\r\n              <NewWorkoutButton />\r\n              <SaveButton />\r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WorkoutCard;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Home from \"../components/Home/Home\";\r\nimport Profile from \"../components/Profile/Profile\";\r\nimport Navbar from \"../components/Navbar/Navbar.js\";\r\nimport BodyContext from \"../utils/BodyContext\";\r\nimport WorkoutCard from \"../components/WorkoutCard/WorkoutCard\";\r\n\r\nfunction Main() {\r\n  const bodyContext = useContext(BodyContext);\r\n\r\n  if (!bodyContext.authState) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/profile\" component={Profile} />\r\n        <Route exact path=\"/workout\" component={WorkoutCard} />\r\n        <Route component={Home} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { LastLocationProvider } from \"react-router-last-location\";\r\nimport BodyContext from \"./utils/BodyContext\";\r\nimport useBodyModel from \"./utils/useBodyModel\";\r\nimport Login from \"./pages/Login\";\r\nimport Main from \"./pages/Main\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BodyContext.Provider value={useBodyModel()}>\r\n      <Router>\r\n        <LastLocationProvider>\r\n          <Switch>\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/\" component={Main} />\r\n          </Switch>\r\n        </LastLocationProvider>\r\n      </Router>\r\n    </BodyContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}